# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#  Makefile for the Squid Object Cache server
#
#  $Id: Makefile.in,v 1.295.2.4 2010/03/14 20:27:27 squidadm Exp $
#
#  Uncomment and customize the following to suit your needs:
#



pkgdatadir = $(datadir)/squid
pkglibdir = $(libdir)/squid
pkgincludedir = $(includedir)/squid
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
EXTRA_PROGRAMS = unlinkd$(EXEEXT) pinger$(EXEEXT) dnsserver$(EXEEXT)
noinst_PROGRAMS = cf_gen$(EXEEXT)
sbin_PROGRAMS = squid$(EXEEXT)
libexec_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_lib_socket_nsl.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/autoconf.h
CONFIG_CLEAN_FILES =
#am__EXEEXT_1 = pinger$(EXEEXT)
#am__EXEEXT_2 = dnsserver$(EXEEXT)
am__EXEEXT_3 = unlinkd$(EXEEXT)
am__EXEEXT_4 = logfile-daemon$(EXEEXT)
am__installdirs = "$(DESTDIR)$(libexecdir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(datadir)" "$(DESTDIR)$(sysconfdir)"
libexecPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(libexec_PROGRAMS) $(noinst_PROGRAMS) $(sbin_PROGRAMS)
am_cf_gen_OBJECTS = cf_gen.$(OBJEXT) debug.$(OBJEXT)
nodist_cf_gen_OBJECTS = globals.$(OBJEXT)
cf_gen_OBJECTS = $(am_cf_gen_OBJECTS) $(nodist_cf_gen_OBJECTS)
cf_gen_LDADD = $(LDADD)
cf_gen_DEPENDENCIES =
dnsserver_SOURCES = dnsserver.c
dnsserver_OBJECTS = dnsserver.$(OBJEXT)
dnsserver_LDADD = $(LDADD)
dnsserver_DEPENDENCIES =
logfile_daemon_SOURCES = logfile-daemon.c
logfile_daemon_OBJECTS = logfile-daemon.$(OBJEXT)
logfile_daemon_LDADD = $(LDADD)
logfile_daemon_DEPENDENCIES =
am_pinger_OBJECTS = pinger.$(OBJEXT) debug.$(OBJEXT)
nodist_pinger_OBJECTS = globals.$(OBJEXT)
pinger_OBJECTS = $(am_pinger_OBJECTS) $(nodist_pinger_OBJECTS)
pinger_LDADD = $(LDADD)
pinger_DEPENDENCIES =
am__squid_SOURCES_DIST = access_log.c acl.c asn.c authenticate.c \
	cache_cf.c CacheDigest.c cache_manager.c carp.c cbdata.c \
	client_db.c client_side.c client_side_rewrite.c \
	client_side_storeurl_rewrite.c comm.c comm_devpoll.c \
	comm_epoll.c comm_kqueue.c comm_poll.c comm_select_simple.c \
	comm_select.c comm_select_win32.c debug.c defines.h \
	delay_pools.c disk.c dns_internal.c dns.c enums.h errorpage.c \
	event.c errormap.c external_acl.c fd.c filemap.c forward.c \
	fqdncache.c ftp.c globals.h gopher.c helper.c htcp.c http.c \
	HttpStatusLine.c HttpHdrCc.c HttpHdrRange.c HttpHdrContRange.c \
	HttpHeader.c HttpHeaderTools.c HttpBody.c HttpMsg.c \
	HttpReply.c HttpRequest.c icmp.c icp_v2.c icp_v3.c ident.c \
	internal.c ipc.c ipc_win32.c ipcache.c leakfinder.c \
	locrewrite.c logfile.c logfile_mod_daemon.c \
	logfile_mod_daemon.h logfile_mod_stdio.c logfile_mod_stdio.h \
	logfile_mod_syslog.c logfile_mod_syslog.h logfile_mod_udp.c \
	logfile_mod_udp.h main.c mem.c MemPool.c MemBuf.c mime.c \
	multicast.c neighbors.c net_db.c Packer.c pconn.c \
	peer_digest.c peer_monitor.c peer_select.c peer_sourcehash.c \
	peer_userhash.c protos.h redirect.c store_rewrite.c referer.c \
	refresh.c refresh_check.c send-announce.c snmp_core.c \
	snmp_agent.c squid.h ssl.c ssl_support.c stat.c StatHist.c \
	String.c stmem.c store.c store_io.c store_client.c \
	store_digest.c store_dir.c store_key_md5.c store_log.c \
	store_rebuild.c store_swapin.c store_swapmeta.c \
	store_swapout.c store_update.c structs.h tools.c typedefs.h \
	unlinkd.c url.c urn.c useragent.c wccp.c wccp2.c whois.c \
	win32.c
##am__objects_1 = comm_select_win32.$(OBJEXT)
##am__objects_1 = comm_select.$(OBJEXT)
##am__objects_1 = comm_select_simple.$(OBJEXT)
##am__objects_1 = comm_poll.$(OBJEXT)
##am__objects_1 = comm_kqueue.$(OBJEXT)
am__objects_1 =  \
	comm_epoll.$(OBJEXT)
#am__objects_1 = comm_devpoll.$(OBJEXT)
#am__objects_2 = delay_pools.$(OBJEXT)
am__objects_3 = dns_internal.$(OBJEXT)
#am__objects_3 = dns.$(OBJEXT)
#am__objects_4 = htcp.$(OBJEXT)
am__objects_5 = ipc.$(OBJEXT)
#am__objects_5 = ipc_win32.$(OBJEXT)
#am__objects_6 = leakfinder.$(OBJEXT)
#am__objects_7 = snmp_core.$(OBJEXT) \
#	snmp_agent.$(OBJEXT)
am__objects_8 = ssl_support.$(OBJEXT)
am__objects_9 = unlinkd.$(OBJEXT)
#am__objects_10 = win32.$(OBJEXT)
am_squid_OBJECTS = access_log.$(OBJEXT) acl.$(OBJEXT) asn.$(OBJEXT) \
	authenticate.$(OBJEXT) cache_cf.$(OBJEXT) \
	CacheDigest.$(OBJEXT) cache_manager.$(OBJEXT) carp.$(OBJEXT) \
	cbdata.$(OBJEXT) client_db.$(OBJEXT) client_side.$(OBJEXT) \
	client_side_rewrite.$(OBJEXT) \
	client_side_storeurl_rewrite.$(OBJEXT) comm.$(OBJEXT) \
	$(am__objects_1) debug.$(OBJEXT) $(am__objects_2) \
	disk.$(OBJEXT) $(am__objects_3) errorpage.$(OBJEXT) \
	event.$(OBJEXT) errormap.$(OBJEXT) external_acl.$(OBJEXT) \
	fd.$(OBJEXT) filemap.$(OBJEXT) forward.$(OBJEXT) \
	fqdncache.$(OBJEXT) ftp.$(OBJEXT) gopher.$(OBJEXT) \
	helper.$(OBJEXT) $(am__objects_4) http.$(OBJEXT) \
	HttpStatusLine.$(OBJEXT) HttpHdrCc.$(OBJEXT) \
	HttpHdrRange.$(OBJEXT) HttpHdrContRange.$(OBJEXT) \
	HttpHeader.$(OBJEXT) HttpHeaderTools.$(OBJEXT) \
	HttpBody.$(OBJEXT) HttpMsg.$(OBJEXT) HttpReply.$(OBJEXT) \
	HttpRequest.$(OBJEXT) icmp.$(OBJEXT) icp_v2.$(OBJEXT) \
	icp_v3.$(OBJEXT) ident.$(OBJEXT) internal.$(OBJEXT) \
	$(am__objects_5) ipcache.$(OBJEXT) $(am__objects_6) \
	locrewrite.$(OBJEXT) logfile.$(OBJEXT) \
	logfile_mod_daemon.$(OBJEXT) logfile_mod_stdio.$(OBJEXT) \
	logfile_mod_syslog.$(OBJEXT) logfile_mod_udp.$(OBJEXT) \
	main.$(OBJEXT) mem.$(OBJEXT) MemPool.$(OBJEXT) \
	MemBuf.$(OBJEXT) mime.$(OBJEXT) multicast.$(OBJEXT) \
	neighbors.$(OBJEXT) net_db.$(OBJEXT) Packer.$(OBJEXT) \
	pconn.$(OBJEXT) peer_digest.$(OBJEXT) peer_monitor.$(OBJEXT) \
	peer_select.$(OBJEXT) peer_sourcehash.$(OBJEXT) \
	peer_userhash.$(OBJEXT) redirect.$(OBJEXT) \
	store_rewrite.$(OBJEXT) referer.$(OBJEXT) refresh.$(OBJEXT) \
	refresh_check.$(OBJEXT) send-announce.$(OBJEXT) \
	$(am__objects_7) ssl.$(OBJEXT) $(am__objects_8) stat.$(OBJEXT) \
	StatHist.$(OBJEXT) String.$(OBJEXT) stmem.$(OBJEXT) \
	store.$(OBJEXT) store_io.$(OBJEXT) store_client.$(OBJEXT) \
	store_digest.$(OBJEXT) store_dir.$(OBJEXT) \
	store_key_md5.$(OBJEXT) store_log.$(OBJEXT) \
	store_rebuild.$(OBJEXT) store_swapin.$(OBJEXT) \
	store_swapmeta.$(OBJEXT) store_swapout.$(OBJEXT) \
	store_update.$(OBJEXT) tools.$(OBJEXT) $(am__objects_9) \
	url.$(OBJEXT) urn.$(OBJEXT) useragent.$(OBJEXT) wccp.$(OBJEXT) \
	wccp2.$(OBJEXT) whois.$(OBJEXT) $(am__objects_10)
nodist_squid_OBJECTS = repl_modules.$(OBJEXT) auth_modules.$(OBJEXT) \
	store_modules.$(OBJEXT) globals.$(OBJEXT) \
	string_arrays.$(OBJEXT)
squid_OBJECTS = $(am_squid_OBJECTS) $(nodist_squid_OBJECTS)
am__DEPENDENCIES_1 =
am_unlinkd_OBJECTS =
unlinkd_OBJECTS = $(am_unlinkd_OBJECTS)
unlinkd_DEPENDENCIES = unlinkd-daemon.o
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/cfgaux/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(cf_gen_SOURCES) $(nodist_cf_gen_SOURCES) dnsserver.c \
	logfile-daemon.c $(pinger_SOURCES) $(nodist_pinger_SOURCES) \
	$(squid_SOURCES) $(EXTRA_squid_SOURCES) \
	$(nodist_squid_SOURCES) $(unlinkd_SOURCES)
DIST_SOURCES = $(cf_gen_SOURCES) dnsserver.c logfile-daemon.c \
	$(pinger_SOURCES) $(am__squid_SOURCES_DIST) \
	$(EXTRA_squid_SOURCES) $(unlinkd_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
dataDATA_INSTALL = $(INSTALL_DATA)
sysconfDATA_INSTALL = $(INSTALL_DATA)
DATA = $(data_DATA) $(sysconf_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9/cfgaux/missing --run aclocal-1.10
ALLOCA = 
AMTAR = ${SHELL} /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9/cfgaux/missing --run tar
AR = /usr/bin/ar
AR_R = /usr/bin/ar r
AUTH_LIBS = libbasic.a
AUTH_MODULES = basic
AUTH_OBJS = auth/libbasic.a
AUTOCONF = ${SHELL} /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9/cfgaux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9/cfgaux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9/cfgaux/missing --run automake-1.10
AWK = mawk
BASIC_AUTH_HELPERS = 
CACHE_HTTP_PORT = 3128
CACHE_ICP_PORT = 3130
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -g -O2
CGIEXT = .cgi
CPP = gcc -E
CPPFLAGS =   
CRYPTLIB = -lcrypt 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H -DDEFAULT_CONFIG_FILE=\"$(DEFAULT_CONFIG_FILE)\"
DEPDIR = .deps
DIGEST_AUTH_HELPERS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/egrep
ERR_DEFAULT_LANGUAGE = English
ERR_LANGUAGES =  Armenian Azerbaijani Bulgarian Catalan Czech Danish Dutch English Estonian Finnish French German Greek Hebrew Hungarian Italian Japanese Korean Lithuanian Polish Portuguese Romanian Russian-1251 Russian-koi8-r Serbian Simplify_Chinese Slovak Spanish Swedish Traditional_Chinese Turkish Ukrainian-1251 Ukrainian-koi8-u Ukrainian-utf8
EXEEXT = 
EXTERNAL_ACL_HELPERS = 
FALSE = /bin/false
GREP = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -g
LIBDLMALLOC = 
LIBOBJS = 
LIBREGEX = 
LIBS = 
LIBSASL = 
LIB_DB = 
LIB_EPOLL = 
LIB_LDAP = -lldap
LIB_MALLOC = 
LN = /bin/ln
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9/cfgaux/missing --run makeinfo
MKDIR = /bin/mkdir
MKDIR_P = /bin/mkdir -p
MV = /bin/mv
NEGOTIATE_AUTH_HELPERS = 
NIS_LIBS = -lnsl 
NTLM_AUTH_HELPERS = 
OBJEXT = o
OPT_DEFAULT_HOSTS = /etc/hosts
PACKAGE = squid
PACKAGE_BUGREPORT = http://bugs.squid-cache.org/
PACKAGE_NAME = Squid Web Proxy
PACKAGE_STRING = Squid Web Proxy 2.7.STABLE9
PACKAGE_TARNAME = squid
PACKAGE_VERSION = 2.7.STABLE9
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKGCONFIG = /usr/bin/pkg-config
RANLIB = ranlib
REGEXLIB = 
REPL_LIBS = liblru.a
REPL_OBJS = repl/liblru.a
REPL_POLICIES = lru
RM = /bin/rm
SET_MAKE = 
SH = /bin/sh
SHELL = /bin/bash
SNMPLIB = 
SSLLIB = -lssl -lcrypto  
STORE_LIBS = libufs.a
STORE_MODULES = ufs
STORE_OBJS = fs/libufs.a
STRIP = 
TRUE = /bin/true
VERSION = 2.7.STABLE9
WIN32_PSAPI = 
XTRA_LIBS = -lm
XTRA_OBJS = 
abs_builddir = /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9/src
abs_srcdir = /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9/src
abs_top_builddir = /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9
abs_top_srcdir = /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/slhyvaa/workspace/HappyStream/KTH-squid-2.7.STABLE9/cfgaux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
makesnmplib = 
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/slhyvaa/squid-2.7.STABLE9
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
DNSSOURCE = dns_internal.c
#DNSSOURCE = dns.c
DNSSERVER = 
#DNSSERVER = dnsserver
SNMPSOURCE = 
#SNMPSOURCE = snmp_core.c snmp_agent.c
DELAY_POOL_SOURCE = 
#DELAY_POOL_SOURCE = delay_pools.c
#HTCPSOURCE = htcp.c
LEAKFINDERSOURCE = 
#LEAKFINDERSOURCE = leakfinder.c
#UNLINKDSOURCE = 
UNLINKDSOURCE = unlinkd.c
#UNLINKD = 
UNLINKD = unlinkd
LOGFILED = logfile-daemon
PINGER = 
#PINGER = pinger
#SSLSOURCE = 
SSLSOURCE = ssl_support.c
WIN32SOURCE = 
#WIN32SOURCE = win32.c
MINGWEXLIB = 
#MINGWEXLIB = -lmingwex
IPC_SOURCE = ipc.c
#IPC_SOURCE = ipc_win32.c
#COMMLOOP_SOURCE = comm_devpoll.c
COMMLOOP_SOURCE = comm_epoll.c
#COMMLOOP_SOURCE = comm_kqueue.c
#COMMLOOP_SOURCE = comm_poll.c
#COMMLOOP_SOURCE = comm_select_simple.c
#COMMLOOP_SOURCE = comm_select.c
#COMMLOOP_SOURCE = comm_select_win32.c
SUBDIRS = fs repl auth
INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include -I$(top_srcdir)/include
cf_gen_SOURCES = cf_gen.c defines.h debug.c
nodist_cf_gen_SOURCES = globals.c
nodist_cf_gen_HEADER = cf_gen_defines.h
EXTRA_squid_SOURCES = \
	delay_pools.c \
	dns.c \
	dnsserver.c \
	dns_internal.c \
	htcp.c \
	leakfinder.c \
	snmp_core.c \
	snmp_agent.c \
	unlinkd.c \
	ssl_support.c \
	ssl_support.h \
	comm_epoll.c \
	comm_poll.c \
	comm_select.c \
	comm_select_win32.c \
	comm_select_simple.c \
	comm_kqueue.c \
	comm_devpoll.c \
	comm_generic.c \
	ipc.c \
	ipc_win32.c \
	win32.c

squid_SOURCES = \
	access_log.c \
	acl.c \
	asn.c \
	authenticate.c \
	cache_cf.c \
	CacheDigest.c \
	cache_manager.c \
	carp.c \
	cbdata.c \
	client_db.c \
	client_side.c \
	client_side_rewrite.c \
	client_side_storeurl_rewrite.c \
	comm.c \
	$(COMMLOOP_SOURCE) \
	debug.c \
	defines.h \
	$(DELAY_POOL_SOURCE) \
	disk.c \
	$(DNSSOURCE) \
	enums.h \
	errorpage.c \
	event.c \
	errormap.c \
	external_acl.c \
	fd.c \
	filemap.c \
	forward.c \
	fqdncache.c \
	ftp.c \
	globals.h \
	gopher.c \
	helper.c \
	$(HTCPSOURCE) \
	http.c \
	HttpStatusLine.c \
	HttpHdrCc.c \
	HttpHdrRange.c \
	HttpHdrContRange.c \
	HttpHeader.c \
	HttpHeaderTools.c \
	HttpBody.c \
	HttpMsg.c \
	HttpReply.c \
	HttpRequest.c \
	icmp.c \
	icp_v2.c \
	icp_v3.c \
	ident.c \
	internal.c \
	$(IPC_SOURCE) \
	ipcache.c \
	$(LEAKFINDERSOURCE) \
	locrewrite.c \
	logfile.c \
	logfile_mod_daemon.c \
	logfile_mod_daemon.h \
	logfile_mod_stdio.c \
	logfile_mod_stdio.h \
	logfile_mod_syslog.c \
	logfile_mod_syslog.h \
	logfile_mod_udp.c \
	logfile_mod_udp.h \
	main.c \
	mem.c \
	MemPool.c \
	MemBuf.c \
	mime.c \
	multicast.c \
	neighbors.c \
	net_db.c \
	Packer.c \
	pconn.c \
	peer_digest.c \
	peer_monitor.c \
	peer_select.c \
	peer_sourcehash.c \
	peer_userhash.c \
	protos.h \
	redirect.c \
	store_rewrite.c \
	referer.c \
	refresh.c \
	refresh_check.c \
	send-announce.c \
	$(SNMPSOURCE) \
	squid.h \
	ssl.c \
	$(SSLSOURCE) \
	stat.c \
	StatHist.c \
	String.c \
	stmem.c \
	store.c \
	store_io.c \
	store_client.c \
	store_digest.c \
	store_dir.c \
	store_key_md5.c \
	store_log.c \
	store_rebuild.c \
	store_swapin.c \
	store_swapmeta.c \
	store_swapout.c \
	store_update.c \
	structs.h \
	tools.c \
	typedefs.h \
	$(UNLINKDSOURCE) \
	url.c \
	urn.c \
	useragent.c \
	wccp.c \
	wccp2.c \
	whois.c \
	$(WIN32SOURCE)

nodist_squid_SOURCES = \
	repl_modules.c \
	auth_modules.c \
	store_modules.c \
	cf_parser.h \
	globals.c \
	string_arrays.c

squid_LDADD = \
	-L../lib \
	 \
	repl/liblru.a \
	fs/libufs.a \
	auth/libbasic.a \
	 \
	 \
	 \
	-lssl -lcrypto   \
	 \
	-lmiscutil \
	-lm \
	$(MINGWEXLIB)

squid_DEPENDENCIES = \
	$(REPL_OBJS) \
	$(STORE_OBJS) \
	$(AUTH_OBJS) \
	$(SNMPLIB)

unlinkd_SOURCES = 
unlinkd_LDADD = unlinkd-daemon.o
pinger_SOURCES = \
	pinger.c \
	debug.c

nodist_pinger_SOURCES = \
	globals.c

BUILT_SOURCES = \
	cf_gen_defines.h \
	cf_parser.h \
	globals.c \
	string_arrays.c \
	repl_modules.c \
	auth_modules.c \
	store_modules.c

sysconf_DATA = \
	squid.conf.default \
	mime.conf.default

data_DATA = \
	mib.txt

LDADD = -L../lib -lmiscutil -lm
EXTRA_DIST = \
	cf_gen_defines \
	cf.data.pre \
	cf.data.depend \
	mk-globals-c.pl \
	mk-string-arrays.pl \
	auth_modules.sh \
	store_modules.sh \
	repl_modules.sh \
	mib.txt \
	mime.conf.default

DEFAULT_HTTP_PORT = 3128
DEFAULT_ICP_PORT = 3130
DEFAULT_PREFIX = $(prefix)
DEFAULT_CONFIG_FILE = $(sysconfdir)/squid.conf
DEFAULT_MIME_TABLE = $(sysconfdir)/mime.conf
DEFAULT_DNSSERVER = $(libexecdir)/`echo dnsserver | sed '$(transform);s/$$/$(EXEEXT)/'`
DEFAULT_LOG_PREFIX = $(localstatedir)/logs
DEFAULT_CACHE_LOG = $(DEFAULT_LOG_PREFIX)/cache.log
DEFAULT_ACCESS_LOG = $(DEFAULT_LOG_PREFIX)/access.log
DEFAULT_STORE_LOG = $(DEFAULT_LOG_PREFIX)/store.log
DEFAULT_PID_FILE = $(DEFAULT_LOG_PREFIX)/squid.pid
DEFAULT_NETDB_FILE = $(DEFAULT_LOG_PREFIX)/netdb.state
DEFAULT_SWAP_DIR = $(localstatedir)/cache
DEFAULT_PINGER = $(libexecdir)/`echo pinger | sed '$(transform);s/$$/$(EXEEXT)/'`
DEFAULT_UNLINKD = $(libexecdir)/`echo unlinkd | sed '$(transform);s/$$/$(EXEEXT)/'`
DEFAULT_DISKD = $(libexecdir)/`echo diskd-daemon | sed '$(transform);s/$$/$(EXEEXT)/'`
DEFAULT_LOGFILED = $(libexecdir)/`echo logfile-daemon | sed '$(transform);s/$$/$(EXEEXT)/'`
DEFAULT_ICON_DIR = $(datadir)/icons
DEFAULT_ERROR_DIR = $(datadir)/errors/English
DEFAULT_MIB_PATH = $(datadir)/mib.txt
DEFAULT_HOSTS = /etc/hosts

# Don't automatically uninstall config files
#	@if test -f $(DESTDIR)$(DEFAULT_CONFIG_FILE) ; then \
#		echo "rm -f $(DESTDIR)$(DEFAULT_CONFIG_FILE)"; \
#		$(RM) -f $(DESTDIR)$(DEFAULT_CONFIG_FILE); \
#	fi
DISTCLEANFILES = cf_gen_defines.h cf.data cf_parser.h squid.conf.default \
	globals.c string_arrays.c repl_modules.c auth_modules.c store_modules.c

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libexecPROGRAMS: $(libexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(libexecdir)" || $(MKDIR_P) "$(DESTDIR)$(libexecdir)"
	@list='$(libexec_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(libexecPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(libexecdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(libexecPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(libexecdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-libexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libexec_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(libexecdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libexecdir)/$$f"; \
	done

clean-libexecPROGRAMS:
	-test -z "$(libexec_PROGRAMS)" || rm -f $(libexec_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(sbindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(sbindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(sbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sbindir)/$$f"; \
	done

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
cf_gen$(EXEEXT): $(cf_gen_OBJECTS) $(cf_gen_DEPENDENCIES) 
	@rm -f cf_gen$(EXEEXT)
	$(LINK) $(cf_gen_OBJECTS) $(cf_gen_LDADD) $(LIBS)
dnsserver$(EXEEXT): $(dnsserver_OBJECTS) $(dnsserver_DEPENDENCIES) 
	@rm -f dnsserver$(EXEEXT)
	$(LINK) $(dnsserver_OBJECTS) $(dnsserver_LDADD) $(LIBS)
logfile-daemon$(EXEEXT): $(logfile_daemon_OBJECTS) $(logfile_daemon_DEPENDENCIES) 
	@rm -f logfile-daemon$(EXEEXT)
	$(LINK) $(logfile_daemon_OBJECTS) $(logfile_daemon_LDADD) $(LIBS)
pinger$(EXEEXT): $(pinger_OBJECTS) $(pinger_DEPENDENCIES) 
	@rm -f pinger$(EXEEXT)
	$(LINK) $(pinger_OBJECTS) $(pinger_LDADD) $(LIBS)
squid$(EXEEXT): $(squid_OBJECTS) $(squid_DEPENDENCIES) 
	@rm -f squid$(EXEEXT)
	$(LINK) $(squid_OBJECTS) $(squid_LDADD) $(LIBS)
unlinkd$(EXEEXT): $(unlinkd_OBJECTS) $(unlinkd_DEPENDENCIES) 
	@rm -f unlinkd$(EXEEXT)
	$(LINK) $(unlinkd_OBJECTS) $(unlinkd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/CacheDigest.Po
include ./$(DEPDIR)/HttpBody.Po
include ./$(DEPDIR)/HttpHdrCc.Po
include ./$(DEPDIR)/HttpHdrContRange.Po
include ./$(DEPDIR)/HttpHdrRange.Po
include ./$(DEPDIR)/HttpHeader.Po
include ./$(DEPDIR)/HttpHeaderTools.Po
include ./$(DEPDIR)/HttpMsg.Po
include ./$(DEPDIR)/HttpReply.Po
include ./$(DEPDIR)/HttpRequest.Po
include ./$(DEPDIR)/HttpStatusLine.Po
include ./$(DEPDIR)/MemBuf.Po
include ./$(DEPDIR)/MemPool.Po
include ./$(DEPDIR)/Packer.Po
include ./$(DEPDIR)/StatHist.Po
include ./$(DEPDIR)/String.Po
include ./$(DEPDIR)/access_log.Po
include ./$(DEPDIR)/acl.Po
include ./$(DEPDIR)/asn.Po
include ./$(DEPDIR)/auth_modules.Po
include ./$(DEPDIR)/authenticate.Po
include ./$(DEPDIR)/cache_cf.Po
include ./$(DEPDIR)/cache_manager.Po
include ./$(DEPDIR)/carp.Po
include ./$(DEPDIR)/cbdata.Po
include ./$(DEPDIR)/cf_gen.Po
include ./$(DEPDIR)/client_db.Po
include ./$(DEPDIR)/client_side.Po
include ./$(DEPDIR)/client_side_rewrite.Po
include ./$(DEPDIR)/client_side_storeurl_rewrite.Po
include ./$(DEPDIR)/comm.Po
include ./$(DEPDIR)/comm_devpoll.Po
include ./$(DEPDIR)/comm_epoll.Po
include ./$(DEPDIR)/comm_generic.Po
include ./$(DEPDIR)/comm_kqueue.Po
include ./$(DEPDIR)/comm_poll.Po
include ./$(DEPDIR)/comm_select.Po
include ./$(DEPDIR)/comm_select_simple.Po
include ./$(DEPDIR)/comm_select_win32.Po
include ./$(DEPDIR)/debug.Po
include ./$(DEPDIR)/delay_pools.Po
include ./$(DEPDIR)/disk.Po
include ./$(DEPDIR)/dns.Po
include ./$(DEPDIR)/dns_internal.Po
include ./$(DEPDIR)/dnsserver.Po
include ./$(DEPDIR)/errormap.Po
include ./$(DEPDIR)/errorpage.Po
include ./$(DEPDIR)/event.Po
include ./$(DEPDIR)/external_acl.Po
include ./$(DEPDIR)/fd.Po
include ./$(DEPDIR)/filemap.Po
include ./$(DEPDIR)/forward.Po
include ./$(DEPDIR)/fqdncache.Po
include ./$(DEPDIR)/ftp.Po
include ./$(DEPDIR)/globals.Po
include ./$(DEPDIR)/gopher.Po
include ./$(DEPDIR)/helper.Po
include ./$(DEPDIR)/htcp.Po
include ./$(DEPDIR)/http.Po
include ./$(DEPDIR)/icmp.Po
include ./$(DEPDIR)/icp_v2.Po
include ./$(DEPDIR)/icp_v3.Po
include ./$(DEPDIR)/ident.Po
include ./$(DEPDIR)/internal.Po
include ./$(DEPDIR)/ipc.Po
include ./$(DEPDIR)/ipc_win32.Po
include ./$(DEPDIR)/ipcache.Po
include ./$(DEPDIR)/leakfinder.Po
include ./$(DEPDIR)/locrewrite.Po
include ./$(DEPDIR)/logfile-daemon.Po
include ./$(DEPDIR)/logfile.Po
include ./$(DEPDIR)/logfile_mod_daemon.Po
include ./$(DEPDIR)/logfile_mod_stdio.Po
include ./$(DEPDIR)/logfile_mod_syslog.Po
include ./$(DEPDIR)/logfile_mod_udp.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/mem.Po
include ./$(DEPDIR)/mime.Po
include ./$(DEPDIR)/multicast.Po
include ./$(DEPDIR)/neighbors.Po
include ./$(DEPDIR)/net_db.Po
include ./$(DEPDIR)/pconn.Po
include ./$(DEPDIR)/peer_digest.Po
include ./$(DEPDIR)/peer_monitor.Po
include ./$(DEPDIR)/peer_select.Po
include ./$(DEPDIR)/peer_sourcehash.Po
include ./$(DEPDIR)/peer_userhash.Po
include ./$(DEPDIR)/pinger.Po
include ./$(DEPDIR)/redirect.Po
include ./$(DEPDIR)/referer.Po
include ./$(DEPDIR)/refresh.Po
include ./$(DEPDIR)/refresh_check.Po
include ./$(DEPDIR)/repl_modules.Po
include ./$(DEPDIR)/send-announce.Po
include ./$(DEPDIR)/snmp_agent.Po
include ./$(DEPDIR)/snmp_core.Po
include ./$(DEPDIR)/ssl.Po
include ./$(DEPDIR)/ssl_support.Po
include ./$(DEPDIR)/stat.Po
include ./$(DEPDIR)/stmem.Po
include ./$(DEPDIR)/store.Po
include ./$(DEPDIR)/store_client.Po
include ./$(DEPDIR)/store_digest.Po
include ./$(DEPDIR)/store_dir.Po
include ./$(DEPDIR)/store_io.Po
include ./$(DEPDIR)/store_key_md5.Po
include ./$(DEPDIR)/store_log.Po
include ./$(DEPDIR)/store_modules.Po
include ./$(DEPDIR)/store_rebuild.Po
include ./$(DEPDIR)/store_rewrite.Po
include ./$(DEPDIR)/store_swapin.Po
include ./$(DEPDIR)/store_swapmeta.Po
include ./$(DEPDIR)/store_swapout.Po
include ./$(DEPDIR)/store_update.Po
include ./$(DEPDIR)/string_arrays.Po
include ./$(DEPDIR)/tools.Po
include ./$(DEPDIR)/unlinkd.Po
include ./$(DEPDIR)/url.Po
include ./$(DEPDIR)/urn.Po
include ./$(DEPDIR)/useragent.Po
include ./$(DEPDIR)/wccp.Po
include ./$(DEPDIR)/wccp2.Po
include ./$(DEPDIR)/whois.Po
include ./$(DEPDIR)/win32.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`
install-dataDATA: $(data_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(datadir)" || $(MKDIR_P) "$(DESTDIR)$(datadir)"
	@list='$(data_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(datadir)/$$f'"; \
	  $(dataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(datadir)/$$f"; \
	done

uninstall-dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(data_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(datadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(datadir)/$$f"; \
	done
install-sysconfDATA: $(sysconf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(sysconfdir)" || $(MKDIR_P) "$(DESTDIR)$(sysconfdir)"
	@list='$(sysconf_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(sysconfDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(sysconfdir)/$$f'"; \
	  $(sysconfDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(sysconfdir)/$$f"; \
	done

uninstall-sysconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sysconf_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(sysconfdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sysconfdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libexecdir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(datadir)" "$(DESTDIR)$(sysconfdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libexecPROGRAMS clean-noinstPROGRAMS \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-data-local install-dataDATA

install-dvi: install-dvi-recursive

install-exec-am: install-libexecPROGRAMS install-sbinPROGRAMS \
	install-sysconfDATA

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-dataDATA uninstall-libexecPROGRAMS \
	uninstall-local uninstall-sbinPROGRAMS uninstall-sysconfDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic \
	clean-libexecPROGRAMS clean-noinstPROGRAMS clean-sbinPROGRAMS \
	ctags ctags-recursive distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dataDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-libexecPROGRAMS install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-sbinPROGRAMS install-strip \
	install-sysconfDATA installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-dataDATA uninstall-libexecPROGRAMS uninstall-local \
	uninstall-sbinPROGRAMS uninstall-sysconfDATA

cf_gen.$(OBJEXT): cf_gen_defines.h
unlinkd-daemon.o: unlinkd.c
	$(COMPILE) -DUNLINK_DAEMON -c $(srcdir)/unlinkd.c -o $@

$(OBJS): $(top_srcdir)/include/version.h ../include/autoconf.h

snmp_core.o snmp_agent.o: ../snmplib/libsnmp.a $(top_srcdir)/include/cache_snmp.h

globals.c: globals.h mk-globals-c.pl
	$(PERL) $(srcdir)/mk-globals-c.pl < $(srcdir)/globals.h > $@

string_arrays.c: enums.h mk-string-arrays.pl
	$(PERL) $(srcdir)/mk-string-arrays.pl < $(srcdir)/enums.h > $@

cache_diff: cache_diff.o debug.o globals.o store_key_md5.o
	$(CC) -o $@ $(LDFLAGS) $@.o debug.o globals.o store_key_md5.o $(STD_APP_LIBS)

test_cache_digest: test_cache_digest.o CacheDigest.o debug.o globals.o store_key_md5.o
	$(CC) -o $@ $(LDFLAGS) $@.o CacheDigest.o debug.o globals.o store_key_md5.o $(STD_APP_LIBS)

cache_cf.o: cf_parser.h

# squid.conf.default is built by cf_gen when making cf_parser.h
squid.conf.default: cf_parser.h
	true

cf_parser.h: cf.data cf_gen$(EXEEXT)
	./cf_gen cf.data $(srcdir)/cf.data.depend

cf_gen_defines.h: $(srcdir)/cf_gen_defines $(srcdir)/cf.data.pre
	awk -f $(srcdir)/cf_gen_defines <$(srcdir)/cf.data.pre >cf_gen_defines.h

cf.data: cf.data.pre Makefile
	sed "\
	s%@DEFAULT_HTTP_PORT@%$(DEFAULT_HTTP_PORT)%g;\
	s%@DEFAULT_ICP_PORT@%$(DEFAULT_ICP_PORT)%g;\
	s%@DEFAULT_MIME_TABLE@%$(DEFAULT_MIME_TABLE)%g;\
	s%@DEFAULT_DNSSERVER@%$(DEFAULT_DNSSERVER)%g;\
	s%@DEFAULT_UNLINKD@%$(DEFAULT_UNLINKD)%g;\
	s%@DEFAULT_PINGER@%$(DEFAULT_PINGER)%g;\
	s%@DEFAULT_DISKD@%$(DEFAULT_DISKD)%g;\
	s%@DEFAULT_LOGFILED@%$(DEFAULT_LOGFILED)%g;\
	s%@DEFAULT_CACHE_LOG@%$(DEFAULT_CACHE_LOG)%g;\
	s%@DEFAULT_ACCESS_LOG@%$(DEFAULT_ACCESS_LOG)%g;\
	s%@DEFAULT_STORE_LOG@%$(DEFAULT_STORE_LOG)%g;\
	s%@DEFAULT_PID_FILE@%$(DEFAULT_PID_FILE)%g;\
	s%@DEFAULT_NETDB_FILE@%$(DEFAULT_NETDB_FILE)%g;\
	s%@DEFAULT_SWAP_DIR@%$(DEFAULT_SWAP_DIR)%g;\
	s%@DEFAULT_ICON_DIR@%$(DEFAULT_ICON_DIR)%g;\
	s%@DEFAULT_MIB_PATH@%$(DEFAULT_MIB_PATH)%g;\
	s%@DEFAULT_ERROR_DIR@%$(DEFAULT_ERROR_DIR)%g;\
	s%@DEFAULT_PREFIX@%$(DEFAULT_PREFIX)%g;\
	s%@DEFAULT_HOSTS@%$(DEFAULT_HOSTS)%g;\
	s%@[V]ERSION@%$(VERSION)%g;"\
	< $(srcdir)/cf.data.pre >$@

store_modules.c: store_modules.sh Makefile
	$(SHELL) $(srcdir)/store_modules.sh $(STORE_MODULES) >store_modules.c

repl_modules.c: repl_modules.sh Makefile
	$(SHELL) $(srcdir)/repl_modules.sh $(REPL_POLICIES) > repl_modules.c

auth_modules.c: auth_modules.sh Makefile
	@$(SHELL) $(srcdir)/auth_modules.sh $(AUTH_MODULES) >auth_modules.c

install-data-local: install-sysconfDATA install-dataDATA
	@if test -f $(DESTDIR)$(DEFAULT_MIME_TABLE) ; then \
	        echo "$@ will not overwrite existing $(DESTDIR)$(DEFAULT_MIME_TABLE)" ; \
	else \
	        echo "$(INSTALL_DATA) $(srcdir)/mime.conf.default $(DESTDIR)$(DEFAULT_MIME_TABLE)" ;\
	        $(INSTALL_DATA) $(srcdir)/mime.conf.default $(DESTDIR)$(DEFAULT_MIME_TABLE); \
	fi
	@if test -f $(DESTDIR)$(DEFAULT_CONFIG_FILE) ; then \
	        echo "$@ will not overwrite existing $(DESTDIR)$(DEFAULT_CONFIG_FILE)" ; \
	else \
	        echo "$(INSTALL_DATA) squid.conf.default $(DESTDIR)$(DEFAULT_CONFIG_FILE)"; \
	        $(INSTALL_DATA) squid.conf.default $(DESTDIR)$(DEFAULT_CONFIG_FILE); \
	fi
	$(mkinstalldirs) $(DESTDIR)$(DEFAULT_LOG_PREFIX)

uninstall-local:
	@if test -f $(DESTDIR)$(DEFAULT_MIME_TABLE) ; then \
		echo "rm -f $(DESTDIR)$(DEFAULT_MIME_TABLE)"; \
		$(RM) -f $(DESTDIR)$(DEFAULT_MIME_TABLE); \
	fi
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
